class xhr {
  constructor() {
    this.http = new XMLHttpRequest();
  }
  get(url, fun, info = null) {
    this.http.onreadystatechange = function() {
      if (this.readyState == 4) {
        if (info == null) fun(this.status, this.responseText);
        else fun(this.status, this.responseText, info);
        document.getElementById("preloader").style.display = "none";
      } else if (this.readyState == 0) {
        if (info == null) fun(0, "{'code':0,'message: connection issue'}");
        else fun(0, "{'code':0,'message: connection issue'}", info);
        document.getElementById("preloader").style.display = "none";
      }
    };
    this.http.open("get", url, true);
    this.http.setRequestHeader(
      "content-type",
      "application/x-www-form-urlencoded"
    );
    this.http.send();
    document.getElementById("preloader").style.display = "";
  }
  post(url, data, fun, info = null) {
    this.http.onreadystatechange = function() {
      if (this.readyState == 4) {
        if (info == null) fun(this.status, this.responseText);
        else fun(this.status, this.responseText, info);
        document.getElementById("preloader").style.display = "none";
      } else if (this.readyState == 0) {
        if (info == null) fun(0, "{'code':0,'message: connection issue'}");
        else fun(0, "{'code':0,'message: connection issue'}", info);
        document.getElementById("preloader").style.display = "none";
      }
    };
    this.http.open("post", url, true);
    this.http.setRequestHeader("cache-control", "no-cache");
    this.http.send(data);
    document.getElementById("preloader").style.display = "";
  }
}
