// PRELOADER
$(window).on('load', function () {
  $('#preloader').delay(300).fadeOut('slow');
});

class adminClass {
  http = new xhr();
  adminList = null;
  submitNotifForm() {
    var regexpForUrl = /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/;
    var data = new FormData();
    var type = document.getElementById("selectTypeOfNotif");
    var label = document.getElementById("batchForNotif");
    var text = document.getElementById("notifText");
    if (!(type.value == "D" || type.value == "N" || type.value == "C")) {
      type.classList.add("is-invalid");
      return false;
    } else {
      type.classList.remove("is-invalid");
      data.append("type", type.value);
    }
    if (
      $("input[name=batchForNotif]:checked").val() == "new" ||
      $("input[name=batchForNotif]:checked").val() == "imp" ||
      $("input[name=batchForNotif]:checked").val() == "na"
    ) {
      label.classList.remove("is-invalid");
      data.append("label", $("input[name=batchForNotif]:checked").val());
    } else {
      label.classList.add("is-invalid");
      return false;
    }
    if (text.value.trim().length > 7) {
      text.classList.remove("is-invalid");
      data.append("text", text.value);
    } else {
      text.classList.add("is-invalid");
      return false;
    }

    if (document.getElementById("notifFileSelect").value != "") {
      data.append("isfile", 1);
      data.append("file", document.getElementById("notifFileSelect").files[0]);
    } else {
      if (document.getElementById("notifUrl").value != "") {
        if (regexpForUrl.test(document.getElementById("notifUrl").value)) {
          data.append("url", document.getElementById("notifUrl").value);
          document.getElementById("notifUrl").classList.remove("is-invalid");
        } else {
          document.getElementById("notifUrl").classList.add("is-invalid");
        }
      }
    }
    data.append("request", "new");
    this.http.post(
      "/api/admin/notifications/",
      data,
      admin.listenSubmitModalForm,
      ['notifSendBtn', 'infoNotifManage']
    );
    document.getElementById("notifSendBtn").disabled = true;
  }
  deleteNotif(id) {
    if (isNaN(id)) return false;
    var conf = confirm("Do you really want to delete ?");
    if (conf == true) {
      var data = new FormData();
      data.append("consent", 1);
      data.append("id", id);
      data.append("request", 'del');
      this.http.post("/api/admin/notifications/", data, admin.listenSubmitModalForm, ['notifSendBtn', 'infoNotifManage']);
    } else {
      return false;
    }
  }
  editAboutInfo() {
    var abt1 = document.getElementById('aboutPara1');
    var abt2 = document.getElementById('aboutPara2');
    if(abt1.value.trim().length < 10) {
      alert("About 1 Paragraph too short.");
      return false;
    }
    if(abt2.value.trim().length < 10) {
      alert("About 2 Paragraph too short.");
      return false;
    }
    var data = new FormData();
    data.append("request", "about-edit");
    data.append("abt1", abt1.value); 
    data.append("abt2", abt2.value);
    this.http.post("/api/admin/site-basics/", data, admin.listenSubmitModalForm, ['editAboutBtn', 'infoSettingsDialog']) 
  } 
  addExam() {
    var examName = document.getElementById("examName");
    if(examName.value.trim().length < 3) {
      document.getElementById('infoResultDialog').innerHTML = "<p class='text-info'>Please enter exam name with at least 3 characters</p>";
      return false;
    } 
    document.getElementById('infoResultDialog').innerHTML = "";
    var data = new FormData();
    data.append("request", "add-exam");
    data.append("exam-name", examName.value);
    this.http.post("/api/admin/results/", data, admin.listenSubmitModalForm, ["createExamBtn", "infoResultDialog"]);
    document.getElementById("createExamBtn").disabled = true;
  }
  deleteExam() {
    var examId = document.getElementById("selectExamInDel");
    var conf = confirm("Do you really want to delete selected exam ?");
    if(conf == false) {
      return false;
    } 
    if((!isNaN(examId.value)) && (!(examId.value == ""))) {
      var data = new FormData();
    } else {
      alert("Select exam first");
      return false;
    }
    data.append("request", "deleteExam");
    data.append("examId", examId.value);
    data.append("conf", 1);
    this.http.post("/api/admin/results/", data, admin.listenSubmitModalForm, ['deleteExamBtn', 'infoResultDialog']);
  }
  deleteResult() {
    var examId = document.getElementById("selectExamInResultUpload");
    var rollNo = document.getElementById("rollNoInRes");
    if(!((!isNaN(examId.value)) && (!(examId.value == "")))) { 
      alert("Select Exam");
      return false;
    } 
    if(rollNo.value.trim().length < 3) {
      alert("Please Enter Roll Number");
    }
    var data = new FormData();
    data.append("request", "deleteResult");
    data.append("examId", examId.value);
    data.append("rollNo", rollNo.value);
    this.http.post("/api/admin/results/", data, admin.listenSubmitModalForm, ['delResultBtn', 'infoResultDialog']);    
  }
  addResult() {
    var examId = document.getElementById("selectExamInResultUpload");
    var rollNo = document.getElementById("rollNoInRes");
    var dob = document.getElementById("dobInRes");
    if(!((!isNaN(examId.value)) && (!(examId.value == "")))) { 
      alert("Select Exam");
      return false;
    } 
    if(rollNo.value.trim().length < 3) {
      alert("Please Enter Roll Number");
    }
    var data = new FormData();
    data.append("request", "deleteResult");
    data.append("examId", examId.value);
    data.append("rollNo", rollNo.value);
    data.append("dob", dob.value);
    data.append("file", document.getElementById("selectResFile").files[0]);
    this.http.post("/api/admin/results/", data, admin.listenSubmitModalForm, ['addResultBtn', 'infoResultDialog']);
  }
  editSlideShow() {
    var data = new FormData();
    data.append("request", "slideshow-edit");
    data.append("slide_1_url", document.getElementById("slide1Url").value);
    data.append("slide_2_url", document.getElementById("slide2Url").value);
    data.append("slide_3_url", document.getElementById("slide3Url").value);
    data.append("slide_1_title", document.getElementById("slide1Title").value);
    data.append("slide_2_title", document.getElementById("slide2Title").value);
    data.append("slide_3_title", document.getElementById("slide3Title").value);
    data.append("slide_1_info", document.getElementById("slide1Desc").value);
    data.append("slide_2_info", document.getElementById("slide2Desc").value);
    data.append("slide_3_info", document.getElementById("slide3Desc").value);
    this.http.post("/api/admin/site-basics/", data, admin.listenSubmitModalForm, ['editSlidesBtn', 'infoSettingsDialog']) 
   
  }
  addCourse() {
    var data = new FormData();
    data.append("request", "add-course");
    data.append("cName", document.getElementById("addCourseName").value);
    data.append("cElg", document.getElementById("addCourseEligibility").value);
    data.append("cDur", document.getElementById("addCourseDuration").value);
    data.append("cFees", document.getElementById("addExamFees").value);
    this.http.post("/api/admin/courses/", data, admin.listenSubmitModalForm, ['addCourseBtn', 'infoCourseDialog']);
  }
  editCourse() {
    var cid = document.getElementById("courseListInEditCourses").value;
    try {
      if(course.courses[cid].course_id == cid) 
      void(0);
    } catch {
      alert("Invalid Course Selected");
      return false;
    }
    var data = new FormData();
    data.append("request", "edit-course");
    data.append("cid", cid);
    data.append("cName", document.getElementById("editCourseName").value);
    data.append("cElg", document.getElementById("editCourseEligibility").value);
    data.append("cDur", document.getElementById("editCourseDuration").value);
    data.append("cFees", document.getElementById("editExamFees").value);
    this.http.post("/api/admin/courses/", data, admin.listenSubmitModalForm, ['editCourseBtn', 'infoCourseDialog']);
  }
  resetSelectedCourse() {
    document.getElementById("editCourseName").disabled = true;
    document.getElementById("editCourseEligibility").disabled = true;
    document.getElementById("editCourseDuration").disabled = true;
    document.getElementById("editExamFees").disabled = true;
    document.getElementById("deleteCourseBtn").disabled = true;
    document.getElementById("editCourseBtn").disabled = true;
    document.getElementById("editCourseName").value = "";
    document.getElementById("editCourseEligibility").value = "";
    document.getElementById("editCourseDuration").value = "";
    document.getElementById("editExamFees").value = "";
  }
  deleteCourse() { 
    var cid = document.getElementById("courseListInEditCourses").value;
    try {
      if(course.courses[cid].course_id == cid) 
      void(0);
    } catch {
      alert("Invalid Course Selected");
      return false;
    }
    var c = confirm("Do you Really Want to Delete - "+course.courses[cid].course_name);
    if(c == false) {
      this.resetSelectedCourse();
      return false;
    }
    var data = new FormData();
    data.append("request", "delete-course");
    data.append("cid", cid);
    this.http.post("/api/admin/courses/", data, admin.listenSubmitModalForm, ['deleteCourseBtn', 'infoCourseDialog']);


  }
  courseSelected(cid) {
    admin.resetSelectedCourse();
    if(cid == "") {
      return false;
    }
    try {
      if(course.courses[cid].course_id == cid) 
      void(0);
    } catch {
      alert("Invalid Course Selected");
      return false;
    }
    document.getElementById("editCourseName").disabled = false;
    document.getElementById("editCourseEligibility").disabled = false;
    document.getElementById("editCourseDuration").disabled = false;
    document.getElementById("editExamFees").disabled = false;
    document.getElementById("deleteCourseBtn").disabled = false;
    document.getElementById("editCourseBtn").disabled = false;
    document.getElementById("editCourseName").value = course.courses[cid].course_name;
    document.getElementById("editCourseEligibility").value = course.courses[cid].eligibility;
    document.getElementById("editCourseDuration").value = course.courses[cid].duration;
    document.getElementById("editExamFees").value = course.courses[cid].exam_fees;
  }
  listenSubmitModalForm(status, res, extra) {
    document.getElementById(extra[0]).disabled = false;
    try {
      var res = JSON.parse(res);
    } catch {
      console.log(status, res);
      var html =
        '<p class="text-danger">Something Went Wrong Please Check Console for more Information</p>';

      document.getElementById(extra[1]).innerHTML = html;
      return false;
    }
    if (status == 200) {
      if (res.code == 200) {
        var html = "<p class='text-success'>" + res.message + "</p>";
      } else if (res.code == 201) {
        var html =
          "<p class='text-danger'>Some Error Occurred!!! Please check the fields and try again. Error Msg : "+res.message+"</p>";
      } else if(res.code == 400) {
        var html = "<p class='text-danger'>Bad request, please contact administrator with message - "+res.message;
      } else {
        console.log(res);
        var html = "<p class='text-danger'>" + res.message + "</p>";
      }
    } else if (status == 0) {
      var html =
        "<p class='text-danger'>Failed to connect with server, check internet connection</p>";
    } else if (status == 403) {
      var html =
        "<p class='text-danger'>" +
        res.code +
        " : " +
        res.message +
        " <a href='/admin/'> Login Here</a></p>";
    } else {
      console.log(res);
      var html =
        "<p class='text-danger'>Error : " +
        status +
        " : " +
        res.message +
        "</p>";

    }
    document.getElementById(extra[1]).innerHTML = html;
    try {
      eval(res.func);
    }
    catch {
      void(0);
    }
  }
  fetchAdmin() {
    this.adminList = null;
    var extra = ['adminList', 'infoUserMgmDialog'];
    document.getElementById(extra[1]).innerHTML = "";
    
    var pass = prompt("Please Enter Your Password To Procceed Further !");
    if(!pass) {
      document.getElementById(extra[1]).innerHTML = "<p class='text-danger'>Password Is Required to Access This Area</p>";
      document.getElementById("add-edit-remove-admin").style.display = "none";
      return false;
    }
    var data = new FormData();
    data.append("request", "fetch-admin");
    data.append("auth_pass", pass);
    this.http.post("/api/admin/users/", data, admin.listenFetchAdmin, extra);
  }
  listenFetchAdmin(status, res, extra) {
    try {
      var res = JSON.parse(res);
    } catch {
      console.log(status, res);
      var html =
        '<p class="text-danger">Something Went Wrong Please Check Console for more Information</p>';

      document.getElementById(extra[1]).innerHTML = html;
      return false;
    }
    if (status == 200) {
      if (res.code == 200) {
        html = "";
        document.getElementById("add-edit-remove-admin").style.display = "";
        var aHtml = "<option value=''>Select Action</option><option value=0>Add New Admin</option><optgroup label='Edit Admins'>"
        for(let i=0; i<res.data.length; i++) {
          aHtml += "<option value='"+res.data[i].admin_id+"'>"+res.data[i].username+"</option>"
        }
        aHtml +="</optgroup>";
        document.getElementById("selectAdmin").innerHTML = aHtml;
        admin.adminList = res.data;
      } else if (res.code == 201) {
        var html =
          "<p class='text-danger'>Some Error Occurred!!! Please check the fields and try again. Error Msg : "+res.message+"</p>";
      } else if(res.code == 400) {
        var html = "<p class='text-danger'>Bad request, please contact administrator with message - "+res.message;
      } else {
        console.log(res);
        var html = "<p class='text-danger'>" + res.message + "</p>";
      }
    } else if (status == 0) {
      var html =
        "<p class='text-danger'>Failed to connect with server, check internet connection</p>";
    } else if (status == 403) {
      var html =
        "<p class='text-danger'>" +
        res.code +
        " : " +
        res.message;
    } else {
      console.log(res);
      var html =
        "<p class='text-danger'>Error : " +
        status +
        " : " +
        res.message +
        "</p>";
    }
    document.getElementById(extra[1]).innerHTML = html;
    try {
      eval(res.func);
    }
    catch {
      void(0);
    }
  }
  resetAddAdminUi() {
    $("#adminFirstName").val("");
    $("#adminFirstName").prop('disabled', true);
    $("#adminLastName").val("");
    $("#adminLastName").prop('disabled', true);
    $("#adminEmail").val("");
    $("#adminEmail").prop('disabled', true);
    $("#adminUsername").val("");
    $("#adminUsername").prop('disabled', true);
    $("#Password").val("");
    $("#Password").prop('disabled', true);
    $("#a1").prop('checked', false);
    $("#a2").prop('checked', false);
    $("#a3").prop('checked', false);
    $("#a4").prop('checked', false);
    $("#a5").prop('checked', false);
    $("#a6").prop('checked', false);
    $("#a1").prop('disabled', true);
    $("#a2").prop('disabled', true);
    $("#a3").prop('disabled', true);
    $("#a4").prop('disabled', true);
    $("#a5").prop('disabled', true);
    $("#a6").prop('disabled', true);
    document.getElementById("userMgmBtn").innerHTML = "";
  }
  addNewAdminUi() {
    $("#adminFirstName").prop('disabled', false);
    $("#adminFirstName").val("");
    $("#adminLastName").prop('disabled', false);
    $("#adminLastName").val("");
    $("#adminEmail").prop('disabled', false);
    $("#adminEmail").val("");
    $("#adminUsername").prop('disabled', false);
    $("#adminUsername").prop('readonly', false);
    $("#adminUsername").val("");
    $("#Password").prop('disabled', false);
    $("#Password").val("");
    $("#a1").prop('disabled', false);
    $("#a2").prop('disabled', false);
    $("#a3").prop('disabled', false);
    $("#a4").prop('disabled', false);
    $("#a5").prop('disabled', false);
    $("#a6").prop('disabled', false);
    $("#a1").prop('checked', false);
    $("#a2").prop('checked', false);
    $("#a3").prop('checked', false);
    $("#a4").prop('checked', false);
    $("#a5").prop('checked', false);
    $("#a6").prop('checked', false);
    document.getElementById("userMgmBtn").innerHTML = '<button type="button" id="addAdminBtn" onclick="admin.addNewAdmin()" class="btn btn-primary">Add Admin</button>'; 

  }
  getAdminIdIndex(id) {
    this.adminList = admin.adminList;
    for(let i = 0; i < this.adminList.length; i++) {
      if(this.adminList[i].admin_id == id)
        return i;
    }
    return -1;
  }
  editAdminUi(id) {
    if(isNaN(id)){
      alert("Something Went Wrong");
      return false;
    }
    var adm_id = this.getAdminIdIndex(id);
    if(adm_id == -1) {
      alert("Something Went Wrong");
      return false;
    }
    this.adminList = admin.adminList;

    $("#adminFirstName").prop('disabled', false);
    $("#adminFirstName").val(this.adminList[adm_id].first_name);
    $("#adminLastName").prop('disabled', false);
    $("#adminLastName").val(this.adminList[adm_id].last_name);
    $("#adminEmail").prop('disabled', false);
    $("#adminEmail").val(this.adminList[adm_id].email);
    $("#adminUsername").prop('readonly', true);
    $("#adminUsername").val(this.adminList[adm_id].username);
    $("#Password").prop('disabled', false);
    $("#Password").val("");
    $("#a1").prop('disabled', false);
    $("#a2").prop('disabled', false);
    $("#a3").prop('disabled', false);
    $("#a4").prop('disabled', false);
    $("#a5").prop('disabled', false);
    $("#a6").prop('disabled', false);
    $("#a1").prop('checked', this.adminList[adm_id].access_website_basic);
    $("#a2").prop('checked', this.adminList[adm_id].access_results);
    $("#a3").prop('checked', this.adminList[adm_id].access_admissions);
    $("#a4").prop('checked', this.adminList[adm_id].access_courses);
    $("#a5").prop('checked', this.adminList[adm_id].access_admin_creation);
    $("#a6").prop('checked', this.adminList[adm_id].access_circulars);
    document.getElementById("userMgmBtn").innerHTML = '<button type="button" id="del" onclick="admin.deleteAdmin()" class="btn btn-danger">Delete Admin</button>&nbsp;&nbsp;&nbsp;<button type="button" onclick="admin.editAdmin()" id="updateAdminBtn" class="btn btn-primary">Update Admin</button>'; 
  }
  deleteAdmin() {
    var id = $("#selectAdmin").val();
    var data = new FormData();
    var c = prompt("Please Enter Password to Confirm That You Really Want To Delete User");
    if(!c)
      return false;
    data.append("request", "deactivateAdmin");
    data.append("auth_pass", c);
    data.append("id", id);
    this.http.post("/api/admin/users/", data, admin.listenSubmitModalForm, ['del', 'infoUserMgmDialog']);

  }
  editAdmin() {
    var c = prompt("Please Enter Password to Confirm That You Really Want To Add User.");
    if(!c)
      return false;
    if($("#a1").prop("checked"))
      var a1 = 1;
    else 
      var a1 = 0;
    if($("#a6").prop("checked"))
      var a6 = 1;
    else 
      var a6 = 0;
    if($("#a3").prop("checked"))
      var a3 = 1;
    else 
      var a3 = 0;
    if($("#a4").prop("checked"))
      var a4 = 1;
    else 
      var a4 = 0;
    if($("#a5").prop("checked"))
      var a5 = 1;
    else 
      var a5 = 0;
    if($("#a2").prop("checked"))
      var a2 = 1;
    else 
      var a2 = 0;
    var data = new FormData();
    data.append("request", "admin-create-update");
    data.append("fn", $("#adminFirstName").val());
    data.append("ln", $("#adminLastName").val());
    data.append("ps", $("#Password").val());
    data.append("em", $("#adminEmail").val());
    data.append("id", $("#selectAdmin").val());
    data.append("access_website_basic", a1);
    data.append("access_circulars", a6);
    data.append("access_admissions", a3);
    data.append("access_results", a2);
    data.append("access_courses", a4);
    data.append("access_admin_creation", a5);
    data.append("action_type", "edit");
    data.append("auth_pass", c);
    this.http.post("/api/admin/users/", data, admin.listenSubmitModalForm, ['updateAdminBtn', 'infoUserMgmDialog']);
  
  }
  addNewAdmin() {
    var c = prompt("Please Enter Password to Confirm That You Really Want To Add User.");
    if(!c)
      return false;
      if($("#a1").prop("checked"))
      var a1 = 1;
    else 
      var a1 = 0;
    if($("#a6").prop("checked"))
      var a6 = 1;
    else 
      var a6 = 0;
    if($("#a3").prop("checked"))
      var a3 = 1;
    else 
      var a3 = 0;
    if($("#a4").prop("checked"))
      var a4 = 1;
    else 
      var a4 = 0;
    if($("#a5").prop("checked"))
      var a5 = 1;
    else 
      var a5 = 0;
    if($("#a2").prop("checked"))
      var a2 = 1;
    else 
      var a2 = 0;
    var data = new FormData();
    data.append("request", "admin-create-update");
    data.append("fn", $("#adminFirstName").val());
    data.append("ln", $("#adminLastName").val());
    data.append("ps", $("#Password").val());
    data.append("em", $("#adminEmail").val());
    data.append("un", $("#adminUsername").val());
    data.append("access_website_basic", a1);
    data.append("access_circulars", a6);
    data.append("access_admissions", a3);
    data.append("access_results", a2);
    data.append("access_courses", a4);
    data.append("access_admin_creation", a5);
    data.append("action_type", "add");
    data.append("auth_pass", c);
    this.http.post("/api/admin/users/", data, admin.listenSubmitModalForm, ['addAdminBtn', 'infoUserMgmDialog']);
  }
}
var http = new xhr();
var admin = new adminClass();


